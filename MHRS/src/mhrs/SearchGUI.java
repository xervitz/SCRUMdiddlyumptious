/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mhrs;

import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import static mhrs.SearchController.findPage;

/**
 *
 * @author Benjamin
 */
public class SearchGUI extends javax.swing.JFrame {

    private static boolean DEBUG = false;
    private static final int idSize = 8;

    /**
     * Creates new form GUI
     */
    public SearchGUI() {
        initComponents();
        this.setTitle("Medical History Report System - Search");
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2); //centers frame on screen
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        patientLastName = new javax.swing.JTextField();
        patientFirstName = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        patientID = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        patientLastName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                patientLastNameKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                patientLastNameKeyPressed(evt);
            }
        });

        patientFirstName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                patientFirstNameKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                patientFirstNameKeyPressed(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchButtonMouseClicked(evt);
            }
        });

        patientID.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("00000000"))));
        patientID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                patientIDKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                patientIDKeyPressed(evt);
            }
        });

        jLabel1.setText("Patient ID");

        jLabel2.setText("Last Name");

        jLabel3.setText("First Name");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(patientID)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 315, Short.MAX_VALUE)
                        .addComponent(searchButton))
                    .addComponent(patientLastName, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(patientFirstName, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patientLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patientFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButtonMouseClicked
         search();
    }//GEN-LAST:event_searchButtonMouseClicked

    private void patientLastNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patientLastNameKeyTyped
        char c = evt.getKeyChar();
        if (!isAlpha(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_patientLastNameKeyTyped

    private void patientIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patientIDKeyTyped
        String text = patientID.getText();
        char c = evt.getKeyChar();
        if (isSize(text) || !isNum(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_patientIDKeyTyped

    private void patientFirstNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patientFirstNameKeyTyped
        char c = evt.getKeyChar();
        if (!isAlpha(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_patientFirstNameKeyTyped

    private void patientIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patientIDKeyPressed
        if(evt.getKeyCode() == 10) {
            search();
        }
    }//GEN-LAST:event_patientIDKeyPressed

    private void patientLastNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patientLastNameKeyPressed
        if(evt.getKeyCode() == 10) {
            search();
        }
    }//GEN-LAST:event_patientLastNameKeyPressed

    private void patientFirstNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patientFirstNameKeyPressed
        if(evt.getKeyCode() == 10) {
            search();
        }
    }//GEN-LAST:event_patientFirstNameKeyPressed
    
    private void search() {
        if (patientID.getText().isEmpty() && patientLastName.getText().isEmpty() && patientFirstName.getText().isEmpty()) {
            //user entered no criteria
            JOptionPane.showMessageDialog(this, "No text entered", "Blank Search Values", JOptionPane.ERROR_MESSAGE);
        } else {
            //user entered some criteria
            Integer ID = -1;
            if(!patientID.getText().isEmpty()) ID = new Integer(patientID.getText());
            String first = patientFirstName.getText();
            String last = patientLastName.getText();
            MHPage result = findPage(ID.intValue(), first, last);
            if(result != null){
                //page found, view it   
                PageViewGUI.main(result);
                this.dispose();
            } else if(DEBUG){
                //disregard the results and create a new page to save
                result = new MHPage(ID, first, last);
                PageViewGUI.main(result);
                this.dispose();
            } else {
                //page missing, create it if desired   
                JOptionPane.showMessageDialog(this, "ID/First/Last name not found in database", "Patient Not Found", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    
    private boolean isAlpha(char c) {
        return "qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM".indexOf(c) != -1;
    }

    private boolean isSize(String s) {
        return (s.length() + 1) > idSize;
    }

    private boolean isNum(char c) {
        return "1234567890".indexOf(c) != -1;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        //uncomment to enable database inserts
        //DEBUG = true;
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField patientFirstName;
    private javax.swing.JFormattedTextField patientID;
    private javax.swing.JTextField patientLastName;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables
}
